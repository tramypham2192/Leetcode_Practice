/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        //create a temperary node (temp.next = head) to stick to head to return later
        //create a current node to reference to temp node and
        //iterate, if current_node.next.value == val, skip that node:
        //current_node.next = current_node.next.next
        //return temp
        ListNode temp = new ListNode();
        temp.next = head;
        ListNode cur = temp;

        while (cur.next != null) {
            if (cur.next.val == val){
                cur.next = cur.next.next;
            }
            else {
                cur = cur.next;
            }
        }
        return temp.next;
    }
}
