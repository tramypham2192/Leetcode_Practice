/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
         if (head == null){
                return head;
            }
            //create a set
            Set<Integer> set = new HashSet<Integer>();
            ListNode prev = new ListNode();
            prev.next = head;
            //traverse linked list
            //then add nodes from linked list to set
            //then check if the node is already in the set
            //if yes, remove reference to the node
            while (prev.next != null){
                if (set.contains(prev.next.val)){
                    prev.next = prev.next.next;
                }
                else {
                    set.add(prev.next.val);
                    prev = prev.next;
                }
            }
            //return head node
            return head;
    }
}
